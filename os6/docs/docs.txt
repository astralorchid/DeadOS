readProgram:
    ah = 0 or 1
        0: read head 0
        1: inc through heads
    bx = sector offset
    dh = head
    -Loads sector at 0000:1000

pdt.isProgram:
    -Checks if the loaded sector at 0:1000 is a program
    -outputs bx = 0 or 1
        0: no program
        1: program


0x0000:0x0500 - Program Descriptor Table:
+:0x0000 - Start sector (byte)
+:0x0001 - Head (byte)
+:0x0002 - Program name (string byte)
+:0x000A - Program name null term
+:0x000B - Running segment (word)
+:0x000D - Program keyboard input handler offset (word)
+:0x000F - Current program (0/1 = false/true)
+:0x0010 - # sectors

Program load procedure @ offset 0x0020

Program header:
+:0x0000: program
+:0x0007: null
+:0x0008: program name
+:0x0010: null
+:0x0011: # sectors
+:0x0012: null

Program interrupts:
0x20: get program list
0x21: scancode to ascii converter
0x22: load program

TOKEN FLAG:
    -bit 15: is char
    -bit 14: is num
    -bit 13: is symbol
    -bit 12: is space/tab
    -bit 11: is return (0x0D)
    -bit 10: prev. byte char
    -bit 9: prev. byte num
    -bit 8: prev. byte symbol
    -bit 7: prev. byte space/tab
    -bit 6: prev. byte return
    -bit 5: null
    -bit 4: null
    -bit 3: null
    -bit 2: null
    -bit 1: null
    -bit 0: on token 

TFP: token flag procedure
PDT: program descriptor Table

to-do list:
-lexical tokenizer
-program backspace
-pmalloc error handler


symbols:
46 44 91 93 95